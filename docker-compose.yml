services:
  multi-tenacy-app:
    container_name: multi-tenacy-app
    build: .
    ports:
      - '9003:9003'
    depends_on:
      - postgres
      - redis
      - nats
    environment:
      APP_NAME: multi-tenacy
      NODE_ENV: development
      DATABASE_TYPE: postgres
      DATABASE_NAME: multi-tenacy
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      PORT: 9003
      DATABASE_USER: postgres
      DATABASE_PASSWORD: somepostgres
      DATABASE_SYNCHRONIZE: 'false'
      DATABASE_LOGGING: 'false'
      JWT_SECRET: my_secret
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis_password
      SWAGGER_ENABLED: 'true'
      JETSTREAM_URL: nats:4222
    networks:
      - multi-tenancy-network

  postgres:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_DB: multi-tenacy
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: somepostgres
    ports:
      - '5432:5432'
    networks:
      - multi-tenancy-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis-cache
    restart: always
    command: redis-server
    ports:
      - '6379:6379'
    networks:
      - multi-tenancy-network
    volumes:
      - redis-data:/data

  nats:
    image: nats:latest
    container_name: nats-server
    restart: always
    command: ['-js', '--http_port=8222']
    ports:
      - '4222:4222'
      - '8222:8222'
    networks:
      - multi-tenancy-network

networks:
  multi-tenancy-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
